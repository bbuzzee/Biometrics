*Bag limit analysis by fishery;

*Compare familysize, number of trips and year by fishery (only comparing permits who 
	attended only one fishery);
*Get a file which has the number of trips each permit made;
proc sort data=sasuser.pufile2; by year idnum fishery harvdate; run; 
proc summary data=sasuser.pufile2; 
by year idnum fishery; where fishery ne 'Did not fish' and nodata ne 1;
	id familysi allowed;
	var total;
	output out=nodate sum(total)= n(year)=trips_0;
	run;
*get one record per permit, n is the number of fisheries the permit participated in;
proc summary data=nodate; by year idnum; 
	output out=nomulti n(year)=fisheries; 
	run;
*Combine files, delete permit holder who made more than one trip and standardize familysize 
	and number of trips;
data fisherybag; merge nodate nomulti; by year idnum; 
	if fisheries gt 1 then delete; 
	format famsize $2. trips $2.; drop _type_ _freq_;
	*remove nonsensical family sizes and combine huge families;
	if familysi=. then delete; if familysi=0 then delete;
	if familysi ge 7 then famsize='7+'; else famsize=familysi;
	*combine trip number tails;
	if trips_0 ge 5 then trips='5+'; else trips=trips_0;
	drop _type_ _freq_ fisheries;
run;
	
*percentage of bag limits filled, exceed hypothesized bag limits;
data fishlim; set fisherybag; 
	format limit $25.;
	if total ge 0 and total lt .25*allowed then limit='0.0%-24.9% of bag limit';
		else if total ge .25*allowed and total lt .5*allowed then limit='25.0%-49.9% of bag limit';
		else if total ge .5*allowed and total lt .75*allowed then limit='50.0%-74.9% of bag limit';
		else if total ge .75*allowed and total le allowed then limit='75.0%-100.0% of bag limit';
		else if total gt allowed then limit='Exceeded bag limit';
	*give chitna bag limit and other hypothesized bag limits and % above/below; 
	if famsize eq '1' then climit=15; else climit=30;
		if total le climit then ltchitna='Less than chitna bag limit'; 
		else ltchitna='Exceeds chitna bag limit';
	limit255=(familysi-1)*5+25;
		if total le limit255 then lt255='Less than 25/5 bag limit'; 
		else lt255='Exceeds 25/5 bag limit';
	limit1510=(familysi-1)*10+15;
		if total le limit1510 then lt1510='Less than 15/10 bag limit'; 
		else lt1510='Exceeds 15/10 bag limit';
	limit155=(familysi-1)*5+15;
		if total le limit155 then lt155='Less than 15/5 bag limit';
		else lt155='Exceeds 15/5 bag limit';
	run;

*give results;
*% of bag limit filled by year;
proc sort data=fishlim; by fishery year; run;
title '% of bag limit filled by fishery and year'; 
proc freq data=fishlim; by fishery; where fishery ne "Unknown";
	tables limit*year/out=fishlimyr_f outpct chisq expected;
	run;
proc transpose data=fishlimyr_f out=fishlimyr_ft; 
	by fishery limit; where fishery ne 'Unknown';
	var pct_col; 
	id year; 
	run;

*% of bag limit filled by family size;
proc sort data=fishlim; by fishery famsize; run;
title '% of bag limit filled by familysize'; 
proc freq data=fishlim; by fishery; 
	tables limit*famsize/out=famfishlim_f outpct chisq expected; 
	run;
proc transpose data=famfishlim_f out=famfishlim_ft; 
	by fishery limit; where fishery ne 'Unknown'; 
	id famsize;
	var pct_col;
	run;
*frequency of permits by familysize;
title '% of permits by familysize'; 
proc freq data=fishlim; tables fishery*famsize/out=familyfish_f outpct; run;
proc transpose data=familyfish_f out=familyfish_ft; 
	by fishery; where fishery ne 'Unknown'; 
	var pct_row; 
	id famsize; 
	run;
*frequency of harvest by familysize;
title '% of harvest by familysize'; 
proc freq data=fishlim; weight total; tables fishery*famsize/out=famfishhar_f outpct; run;
proc transpose data=famfishhar_f out=famfishhar_ft; 
	by fishery; where fishery ne 'Unknown'; 
	var pct_row; 
	id famsize; 
	run;

*% of bag limit filled by number of trips;
proc sort data=fishlim; by fishery trips; run;
title '% of bag limit filled by number of trips and fishery';
proc freq data=fishlim; by fishery; 
	tables limit*trips/out=tripfishlim_f outpct chisq expected; 
	run;
proc transpose data=triplim_f out=triplim_ft; 
	by fishery limit; where fishery ne 'Unknown'; 
	var pct_col; 
	id trips; 
	run;
*frequency permits by number of trips;
title '% of permits by number of trips';
proc freq data=fishlim; tables fishery*trips/out=tripfish_f outpct; run;
proc transpose data=tripfish_f out=tripfish_ft; 
	by fishery; where fishery ne 'Unknown';
	var pct_row; 
	id trips; 
	run;
*frequency of harvest by number of trips;
title '% of harvest by number of trips';
proc freq data=fishlim; weight total; tables fishery*trips/out=tripfishhar_f outpct; run;
proc transpose data=tripfishhar_f out=tripfishhar_ft; 
	by fishery; where fishery ne 'Unknown';
	var pct_row; 
	id trips; 
	run;

