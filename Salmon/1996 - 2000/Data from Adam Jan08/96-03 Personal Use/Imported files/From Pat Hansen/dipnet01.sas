**************************************************************************;
*this program reads and modifies data for the uci dipnet project;
*there are 3 data file, vendors, permits and harvest;
*this program is stored as dipnet data 2001.sas;
**************************************************************************;


OPTIONS PAGENO=1;
LIBNAME SASDATA BASE 'H:\COMMON\PAT\PERMITS\2001';
RUN;

**************************************************************************;
*                              vendor data                               *;
**************************************************************************;
*assign vendors using spreadsheet data (vendor01 FIXED.xls) supplied by dora;


FILENAME VEND DDE 'EXCEL|[VENDOR01 FIXED.XLS]VENDORS LIST!R2C1:R200C6';
DATA VEND;
     INFILE VEND DLM='09'X NOTAB DSD MISSOVER;
     LENGTH NAME $40.;
     LENGTH VENDOR $9.;
     INPUT NAME $ VENDOR $ STARTNUM ENDNUM;
     IF NAME = 'NEVER ISSUED TO VENDOR' THEN NOT_ISSUED = 'Y';
     IF NAME = '' THEN DELETE;
PROC PRINT;
     TITLE1 'PRINT #1';
     TITLE2 'VENDOR LIST';
     TITLE3 'FROM DORAS EXCEL SPREADSHEET - VENDOR LIST TAB';
RUN;

DATA VENDLIST; SET VEND;
     

FILENAME VRETURN DDE 'EXCEL|[VENDOR01 FIXED.XLS]RETURNED!R2C1:R100C3';
DATA VRETURN;
     INFILE VRETURN DLM='09'X NOTAB DSD MISSOVER;
     LENGTH NAME $40.;
     INPUT NAME $ STARTNUM  ENDNUM;
     IF NAME = '' THEN DELETE;
PROC PRINT;
     TITLE1 'PRINT #2';
     TITLE2 'RETURNED PERMITS';
     TITLE3 'FROM DORAS EXCEL SPREADSHEET - RETURNED TAB';
RUN;



*this makes a file with one line for every permit we gave to the vendors;
DATA VENDORS; SET VENDLIST;
     DO PERMIT = STARTNUM TO ENDNUM;
        OUTPUT;
     END;

PROC SORT; BY PERMIT;

PROC FREQ; 
     TABLES PERMIT / NOPRINT OUT=CHECK;
DATA CHECK; SET CHECK;
     IF COUNT GT 1;
PROC PRINT;
     TITLE1 'PRINT #3';
     TITLE2 'PROBLEM - MULTIPLE PERMIT NUMBERS';
     TITLE3 'FROM DORAS EXCEL SPREADSHEET - VENDOR LIST TAB';

RUN; 

*this makes a file with one line for every permit returned from the vendor;
DATA RETURNED; SET VRETURN;
     DO PERMIT = STARTNUM TO ENDNUM;
        RETURNED = 'Y';
        OUTPUT;
     END;
PROC SORT; BY PERMIT;

PROC FREQ; 
     TABLES PERMIT / NOPRINT OUT=CHECK;
DATA CHECK; SET CHECK;
     IF COUNT GT 1;
PROC PRINT;
     TITLE1 'PRINT #4';
     TITLE2 'PROBLEM - MULTIPLE PERMIT NUMBERS';
     TITLE3 'FROM DORAS EXCEL SPREADSHEET - RETURNED TAB';
RUN; 


DATA VENDORS2; MERGE VENDORS RETURNED; BY PERMIT;
     IF RETURNED = 'Y' THEN DELETE;
     IF NOT_ISSUED = 'Y' THEN DELETE;
     DROP STARTNUM ENDNUM RETURNED NOT_ISSUED;

PROC FREQ; 
     TABLES PERMIT / NOPRINT OUT=CHECK;
DATA CHECK; SET CHECK;
     IF COUNT GT 1;
PROC PRINT;
     TITLE1 'PRINT #5';
     TITLE2 'MULTIPLE PERMIT NUMBERS IN THE SAS VENDOR2 DATABASE';
     TITLE3 '';
RUN;

FILENAME OLD DDE 'EXCEL|[VENDOR01 FIXED.XLS]2000!R2C1:R100C3';
DATA OLD;
     INFILE OLD DLM='09'X NOTAB DSD MISSOVER;
	 LENGTH VENDOR $9.;
     INPUT VENDOR $ PERMIT;
	 IF PERMIT = . THEN DELETE;

PROC PRINT;
     TITLE1 'PRINT #5A';
     TITLE2 '2000 PERMITS';
     TITLE3 'FROM DORAS EXCEL SPREADSHEET - 2000 TAB';
RUN;

DATA VENDORS2; SET VENDORS2 OLD;


/*DATA SASDATA.VENDLIST; SET VENDORS2;*/
     VDB = 'Y';
RUN;






 
**************************************************************************;
*                              permit data                               *;
**************************************************************************;

PROC PRINT DATA = SASDATA.CISLPM01C (OBS=10);
     TITLE1 'PRINT #6A';
     TITLE2 'CISLPM01C -FIRST 10 RECORDS';
RUN; 
PROC PRINT DATA = SASDATA.CISLPM01Z (OBS=10);
     TITLE1 'PRINT #6B';
     TITLE2 'CISLPM01Z -FIRST 10 RECORDS';
RUN; 

* identifies duplicates and get rid of variables we never use;

DATA ISSUED; SET SASDATA.CISLPM01C SASDATA.CISLPM01Z;
     IF OFFICE = 'NULL' THEN OFFICE = '';
     IF DUPPREF = 0 THEN DUPPREF = .;
     PERMIT = PERMITNO;
     IF OFFICE = '' THEN NOVENDORCOPY = 'Y';
	 IF STATUS = 'Z' THEN RESPONDED = 'N'; 
	    ELSE RESPONDED = 'Y';
     DROP PMRECID INITIAL ADDRESS ZIPCODE PHONE HHMEMBERS KEYDATE KEYID COMMENTS YEAR DATEISS PERMITNO;
PROC SORT; BY PERMIT;
     TITLE1 'PRINT #7';
     TITLE2 'CHECKS ON SAS ISSUED DATABASE';
RUN;

PROC FREQ;
     TABLES CITY FAMILYSI ALLOWED OFFICE MAILING NOTFISH BLANKRPT STATUS DUPPREF NOVENDORCOPY RESPONDED;
PROC FREQ;
     TABLES STATUS * RESPONDED;
PROC FREQ;
     TABLES STATUS * BLANKRPT;
PROC FREQ;
     TABLES STATUS * NOTFISH;
RUN;



DATA CHECK; SET ISSUED;
     IF FAMILYSI GT 15;
PROC PRINT;
     VAR OFFICE PERMIT FIRST_NAME LAST_NAME CITY ADLNO FAMILYSI MAILING STATUS;  
     TITLE1 'PRINT #8';
     TITLE2 'HUGE FAMILIES';
     TITLE3 'SAS ISSUED DATABASE';
RUN;


DATA CHECK; SET ISSUED;
     IF OFFICE = '';
PROC PRINT;
     VAR NOVENDORCOPY OFFICE PERMIT FIRST_NAME LAST_NAME CITY ADLNO FAMILYSI MAILING STATUS;  
     TITLE1 'PRINT #9';
     TITLE2 'NO VENDOR COPY';
RUN;


PROC FREQ DATA = ISSUED;
     TABLES LICENSE_NO / NOPRINT OUT = CHECK;
DATA CHECK; SET CHECK;
     IF COUNT GT 1;
     DUP_LIC = 'Y';

DATA CHECK; SET CHECK;
     IF SUBSTR(LICENSE_NO,1,1) = 'A' OR SUBSTR(LICENSE_NO,1,1) = 'N' OR SUBSTR(LICENSE_NO,1,1) = 'U' THEN DELETE;
     IF SUBSTR(LICENSE_NO,1,2) = 'PE' OR LICENSE_NO = 'PID' OR LICENSE_NO = '' THEN DELETE;
PROC SORT; BY LICENSE_NO;
RUN;


PROC SORT DATA = ISSUED; BY LICENSE_NO;

DATA CHECK; MERGE CHECK ISSUED; BY LICENSE_NO;
     IF DUP_LIC = 'Y';
PROC PRINT;
     VAR DUPPREF LICENSE_NO PERMIT FIRST_NAME LAST_NAME CITY ADLNO FAMILYSI MAILING STATUS;
     TITLE1 'PRINT #10';
     TITLE2 'DUPLICATE LICENSE'; 
RUN;


DATA DUP; SET ISSUED (DROP = PERMIT);
     IF DUPPREF NE . AND DUPPREF NE 0;
     VOID_DUP = 'Y';
     RENAME DUPPREF = PERMIT;
PROC PRINT;
     VAR OFFICE PERMIT FIRST_NAME LAST_NAME CITY ADLNO FAMILYSI MAILING STATUS LICENSE_NO VOID_DUP; 
     TITLE1 'PRINT #11';
     TITLE2 'DUPLICATE PERMITS';
     TITLE3 'SAS DUP DATABASE';
RUN;


DATA ISSUED; SET ISSUED DUP;
     DROP DUPPREF;
RUN;

PROC FREQ;
     TABLES PERMIT / NOPRINT OUT = CHECK;

DATA CHECK; SET CHECK;
     IF COUNT GT 1;
PROC PRINT;
     TITLE1 'PRINT #12';
     TITLE2 'PROBLEMS';
     TITLE3 'SAS ISSUED DATABASE';

DATA ISSUED; SET ISSUED;
     IDB = 'Y';
     IF VOID_DUP = 'Y' THEN DELETE;
     DROP VOID_DUP;
RUN;


/*DATA SASDATA.ISSUED; SET ISSUED;*/
RUN;


PROC SORT DATA = SASDATA.VENDLIST; BY PERMIT;
PROC SORT DATA = SASDATA.ISSUED; BY PERMIT;

DATA PERMIT; MERGE SASDATA.VENDLIST SASDATA.ISSUED; BY PERMIT;
     DROP PMRECID ADLNO LICENSE_NO;
RUN;

DATA PROBLEM; SET PERMIT;
     IF VDB NE 'Y';
PROC SORT; BY PERMIT;
PROC PRINT;
     TITLE1 'PRINT #13';
     TITLE2 'RECORDS NOT IN VENDOR DATABASE';
     TITLE3 ' ';
RUN;


PROC FREQ DATA=PERMIT;
     TABLES VENDOR * OFFICE / OUT = CHECK NOPRINT;
RUN;

DATA CHECK; SET CHECK;
     IF VENDOR = OFFICE THEN DELETE;
     IF OFFICE = '' THEN DELETE;
     IF VENDOR = '' THEN DELETE;
     DROP PERCENT;
PROC PRINT;
     TITLE1 'PRINT #14';
     TITLE2 'OFFICE VENDOR PROBLEMS';
     TITLE3 'SAS PERMIT DATABASE';
RUN;


DATA PERMIT; SET PERMIT;
     IF IDB = 'Y';
     IF OFFICE NE VENDOR AND VENDOR NE '' THEN OFFICE = VENDOR;
     DROP NAME;
RUN;

PROC PRINT DATA = PERMIT;
     WHERE OFFICE = ' ';
     TITLE1 'PRINT #15';
     TITLE2 'CHECK FOR MISSING OFFICE IN PERMIT';
     TITLE3 'YOU GOTTA FIX THESE!';
RUN; 


* label the compliant permits (those that responded voluntarily or to mailing 1);
DATA PERMIT; SET PERMIT;
     IF MAILING LE 1 THEN COMPLIANT = 'Y';
        ELSE COMPLIANT = 'N';
     IF BLANKRPT = 1 THEN NOTFISH = 1;
     IF NOTFISH = 1 THEN RESPONDED = 'Y';
     DROP VDB IDB;

     TITLE1 'DATA CHECKS';
     TITLE2 'PERMIT DATABASE';
     TITLE3 '';

RUN;

PROC FREQ DATA=PERMIT;
     TABLES COMPLIANT RESPONDED;
PROC FREQ;
     TABLES COMPLIANT * STATUS;
PROC FREQ;
     TABLES COMPLIANT * MAILING;
PROC FREQ;
     TABLES NOTFISH * BLANKRPT;
PROC FREQ;
     TABLES NOTFISH * STATUS;
RUN;



/*DATA SASDATA.PERMIT; SET PERMIT (DROP = VENDORS);*/
RUN;
PROC FREQ DATA = SASDATA.PERMIT;
     TABLES OFFICE;
RUN;

PROC PRINT DATA=PERMIT;
     WHERE OFFICE = '0011' OR OFFICE = '0171';
     TITLE1 'PRINT #16';
     TITLE2 "COMPLIANT BEFORE SUMMARY & TRANSPOSE FOR VENDORS 11 & 171";
RUN;


* get a summary for each office of the number that responded voluntarily,
  classified into those with vendor cards and those without.  use just the
  voluntary permits because the response rate would be expected to improve
  for those with vendor cards after the first mailing;


PROC SORT DATA=PERMIT; BY OFFICE;
PROC SUMMARY DATA=PERMIT MISSING; BY OFFICE;
     WHERE COMPLIANT = 'Y';
     CLASS NOVENDORCOPY;
     OUTPUT OUT=VENDORSTATS1;
RUN;

PROC PRINT DATA=VENDORSTATS1;
     TITLE1 'PRINT #17';
     TITLE2 'VENDORSTATS1 BEFORE TRANSPOSE';
RUN;

PROC TRANSPOSE DATA=VENDORSTATS1 OUT=TRANSOUT; BY OFFICE;
    VAR _FREQ_; *ID _TYPE_;
RUN;



/*
*  TO CATEGORIZE PERMITS, THINK OF THIS TABLE (B MEANS BOTH):
          VENDOR CARD RETURNED
 PERMIT   |    NO   |    YES  | ROW TOTAL
 RETURNED _______________________________
        
    NO    |  VNRN   |  VYRN   |  VBRN
          _______________________________

   YES    |  VNRY   |  VYRY   |  VBRY
          _______________________________
  COLUMN
   TOTAL  |  VNRB   |  VYRB   |  VBRB

USE JUST VOLUNTARY RETURNS BECAUSE AFTER THE FIRST REMINDER THE
ORPHAN PERMITS (THAT DON'T GET A REMINDER) WOULD NOT BE EXPECTED
TO HAVE THE SAME RESPONSE RATE AS PERMITS WITH VENDOR COPYS (THAT 
DO GET A REMINDER).  
WE NEED TO KNOW VBRB (THE TOTAL PERMITS ISSUED).
USE THE RESPONSE RATE (VYRY/VYRB) TO ESTIMATE VNRB AND GET VBRB FROM THAT;

* VBRY = ALL PERMITS RETURNED BY DIPPERS WHO PICKED UP 
         THEIR PERMITS AT VENDOR Y = VYRY+VNRY
  VYRY = PERMITS WITH VENDOR CARDS RETURNED BY DIPPERS WHO PICKED UP 
         THEIR PERMITS AT VENDOR Y
  VNRY = PERMITS WITHOUT VENDOR CARDS RETURNED BY DIPPERS WHO PICKED UP 
         THEIR PERMITS AT VENDOR Y;
*/

DATA TRANSOUT; SET TRANSOUT;
     IF COL3 = . THEN COL3 = 0;
     RENAME COL1 = VBRY COL2 = VYRY;
DATA TRANSOUT; SET TRANSOUT;
     RENAME COL3 = VNRY;
PROC PRINT DATA=TRANSOUT;
     TITLE1 'PRINT #18';
     TITLE2 'TRANSOUT AFTER TRANSPOSE';
RUN;
 
* KNOWNS = ALL PERMITS THAT WE KNOW ABOUT-INCLUDING 
     ALL RETURNED PERMITS (VYRY+VNRY), PLUS 
     THOSE WE KNOW WERE ISSUED BUT WERE NOT RETURNED (VYRN). ; 
 
PROC SUMMARY DATA=PERMIT MISSING NWAY;
     CLASS OFFICE;
     OUTPUT OUT= KNOWNS;

DATA KNOWNS; SET KNOWNS;
     RENAME _FREQ_ = KNOWNS;
PROC PRINT DATA=KNOWNS;
     TITLE1 'PRINT #19';
     TITLE2 "KNOWNS AFTER SUMMARY & FREQ=KNOWNS";
RUN; 

DATA TABLE; MERGE TRANSOUT KNOWNS; BY OFFICE;
     VYRB = KNOWNS - VNRY;
     VYRN = VYRB - VYRY;
     RESP_RATE = VYRY/VYRB;
     VNRB = VNRY/(RESP_RATE);          VNRB = ROUND(VNRB,1);
     VNRN = VNRB - VNRY;               VNRN = ROUND(VNRN,1);
     VBRN = VNRN + VYRN;
     VARRESP_RATE = (RESP_RATE * (1-RESP_RATE))/(VYRB-1);
     VAR_VNRB = VNRY**2 * (1/(RESP_RATE**4))*VARRESP_RATE;
     VBRB = VYRY + VNRY + VYRN + VNRN;
     VAR_VBRB = VAR_VNRB;
     DROP _NAME_ _TYPE_ ;
RUN;

PROC PRINT DATA= TABLE;
     TITLE1 'PRINT #20';
     TITLE2 'TABLE MERGED TRANSOUT AND KNOWNS WITH CALCULATIONS';
RUN;
* THESE DATA CHECK STEPS MAKE THE ABOVE 4X4 TABLE FOR EACH VENDOR
  THIS IS JUST A CHECK, YOU DON'T NEED TO DO THIS SECTION UNLESS YOU
  WANT TO SEE THE TABLES;


DATA CHECK1; SET TABLE;
     VCARD='YES';
     RETURN='YES';
     WEIGHT=VYRY;

DATA CHECK2; SET TABLE;
     VCARD='YES'; 
     RETURN='NO';
     WEIGHT=VYRN;

DATA CHECK3; SET TABLE;
     VCARD='NO';
     RETURN='YES';
     WEIGHT=VNRY;

DATA CHECK4; SET TABLE;
     VCARD='NO';
     RETURN='NO';
     WEIGHT = VNYN;
RUN;


DATA CHECK; SET CHECK1 CHECK2 CHECK3 CHECK4;
     KEEP OFFICE VCARD RETURN WEIGHT;
RUN;
/*
PROC SORT DATA= CHECK; BY OFFICE;
PROC FREQ; BY OFFICE;
     TABLES RETURN*VCARD;
     WEIGHT WEIGHT;
RUN; 
* END OF THE 4X4 TABLE CHECK; 
*/
PROC SUMMARY DATA=TABLE;
     VAR VBRY VYRY VNRY KNOWNS VYRB VYRN VBRB VAR_VBRB;
     OUTPUT OUT=TOTISS SUM= SUMVBRY SUMVYRY SUMVNRY KNOWNS SUMVYRB SUMVYRN NHAT VARNHAT;
RUN;
PROC PRINT DATA=TOTISS;
     TITLE1 'PRINT #21';
     TITLE2 "TOTISS ESTIMATE OF TOTAL NUMBER OF PERMITS (NHAT) ISSUED & ITS VARIANCE (VARNHAT)";
RUN;
* DONE ESTIMATING NUMBER OF PERMITS ISSUED;  
* get the harvest file;





**************************************************************************;
*                              HARVEST data                              *;
**************************************************************************;


DATA HARVESTFILE; SET SASDATA.CISLHV01C;
     IF HARVDATE EQ '01JAN01'D THEN HARVDATE = .;
     DROP HVRECID KEYDATE KEYID YEAR EDITED COMMENTS MAILING;
     RENAME PERMITNO = PERMIT;
     RESPONDED = 'Y';
RUN;

PROC SORT; BY PERMIT;     
PROC PRINT DATA = HARVESTFILE (OBS = 65);
     TITLE1 'PRINT #22';
     TITLE2 'HARVEST FILE';
RUN;

PROC FREQ;
     TABLES NOCATCH FISHERY NOHRVRPT HARVDATE RESPONDED;
RUN;



DATA CHECK; SET HARVESTFILE;
     IF NOCATCH = 1;
PROC FREQ;
     TABLES RED KING COHO PINK CHUM NOHRVRPT;
     TITLE1 'PRINT #23';
     TITLE2 'NOCATCH = 1';
     TITLE3 'HARVEST DATABASE';
RUN;

DATA CHECK; SET HARVESTFILE;
     IF NOHRVRPT = 1;
PROC FREQ;
     TABLES RED KING COHO PINK CHUM NOCATCH;
     TITLE1 'PRINT #24';
     TITLE2 'NOHRVRPT = 1';
     TITLE3 'HARVEST DATABASE';
RUN;


DATA HARVESTFILE; SET HARVESTFILE;
     IF NOHRVRPT = 1 THEN NOCATCH = 1;
     DROP NOHRVRPT;

RUN;


PROC SORT DATA=HARVESTFILE; BY PERMIT; RUN;
PROC SORT DATA=PERMIT; BY PERMIT; RUN;
 
* To get mailing assigned in harvest file, merge it with file PERMIT.
  File ALLPERMITS is a harvest and permit file that has at least one record for every permit, 
  including the voided permits and the permits that were not returned.  
  Permits that fished more than one day have more than one line.;

DATA ALLPERMITS; MERGE HARVESTFILE(IN=INH RENAME=(FISHERY=OLDFSHRY)) PERMIT(IN=INP); BY PERMIT;
     IF INH THEN HARVFILE=1;
     IF INP THEN PERMFILE=1;
     
RUN;
* Check for permits that are in the harvest file but not in the permit file.
  If you find any, then you have to go back to the start of this program and
  add them into file issued;
PROC PRINT DATA=ALLPERMITS;
     WHERE HARVFILE=1 AND PERMFILE=.;
     TITLE1 'PRINT #25';
     TITLE2 'PERMITS THAT ARE IN HARVEST FILE BUT NOT IN PERMIT FILE. ADD THESE TO PERMIT FILE.';
RUN;


DATA ALLPERMITS; SET ALLPERMITS;
    IF RESPONDED EQ '' THEN RESPONDED = 'N';
RUN;


PROC PRINT DATA=ALLPERMITS;
     WHERE PERMIT LT 100;
     TITLE1 'PRINT #26';
     TITLE2 'HARVEST FILE ALLPERMITS AFTER MERGING FOR PERMITS LT 100';
RUN;

DATA CHECK; SET ALLPERMITS; BY PERMIT;
     IF FIRST.PERMIT;
PROC FREQ;
     TABLES RESPONDED;
PROC FREQ;
     TABLES RESPONDED*STATUS;
RUN;


DATA RETURNED; SET ALLPERMITS;
     IF RESPONDED = 'N' THEN DELETE;
     IF STATUS = 'N' THEN OLDFSHRY = 'DID NOT FISH';
     IF NOTFISH = 1 THEN OLDFSHRY = 'DID NOT FISH';

     TOTAL = SUM(RED,KING,COHO,PINK,CHUM,0);

     IF OLDFSHRY EQ 'KENAI'    THEN FISHERY = 1;
     IF OLDFSHRY EQ 'KASILOF' AND HARVDATE GE '01JUN01'D AND HARVDATE LT '01JUL01'D THEN FISHERY = 3;  *GILLNET;
     IF OLDFSHRY EQ 'KASILOF' AND FISHERY = . THEN FISHERY = 2;  *DIPNET;
     IF OLDFSHRY EQ 'FISH CREEK'     THEN FISHERY = 4;
     IF OLDFSHRY EQ 'UNKNOWN'        THEN FISHERY = 5;
     IF OLDFSHRY EQ 'DID NOT FISH'   THEN FISHERY = 6;
     IF FISHERY = . THEN FISHERY = 99;

     DROP OLDFSHRY;
     FORMAT FISHERY 2.0;
     KEEP PERMIT HARVDATE RED KING COHO PINK CHUM NOTFISH STATUS TOTAL FISHERY COMPLIANT NOTFISH BLANKRPT RESPONDED
          STATE CITY FAMILYSI OFFICE MAILING;
RUN;

PROC PRINT DATA=RETURNED;
     WHERE PERMIT LT 100;
     TITLE1 'PRINT #27';
     TITLE2 "RETURNED AFTER CODING FISHERY & DELETING VOIDS & NON RESPONSE FOR PERMITS LT 100";
RUN;

PROC PRINT DATA=RETURNED;
     WHERE NOTFISH=1 AND (HARVDATE GT 0 OR TOTAL GT 0);
     TITLE1 'PRINT #28';
     TITLE2 'RECORDS IN RETURNED MARKED DID NOT FISH, BUT HAVE EFFORT OR HARVEST -CHECK THESE OUT';
  RUN;

PROC PRINT DATA=RETURNED;
     WHERE FISHERY EQ 99;
     TITLE1 'PRINT #29';
     TITLE2 'RECORDS IN RETURNED WITH MISSING FISHERY';
RUN;

PROC FREQ;
     TABLES FISHERY;
RUN;

PROC SORT DATA = RETURNED; BY FISHERY;
PROC FREQ DATA = RETURNED; BY FISHERY;
     TABLES PERMIT*HARVDATE / NOPRINT OUT = CHECK;
DATA CHECK; SET CHECK;
     IF HARVDATE = . THEN DELETE;
     IF COUNT GT 1;
PROC PRINT;
RUN;

DATA CHECK; SET RETURNED;
     IF FISHERY = 99;
PROC FREQ;
     TABLES FISHERY STATUS HARVDATE TOTAL NOTFISH BLANKRPT RESPONDED COMPLIANT;
RUN;

*IN 2000, ALL THE FISHERY=99 RECORDS HAD NO HARVEST AND NO HARVDATE AND 
WERE NOT MARKED NOTFISH=1.     THESE ARE THE BLANK REPORTS.     ASSUME THEY
ARE DID NOT FISH;

DATA RETURNED; SET RETURNED;
     IF FISHERY EQ 99 THEN DO;
                             BLANKRPT = 1;
                             NOTFISH = 1;
                           END;
     IF BLANKRPT = 1 THEN FISHERY = 6;
     IF BLANKRPT = 1 THEN NOTFISH = 1;
RUN;


* SOME PERMITS MAY HAVE MORE THAN ONE RECORD FOR THE SAME FISHERY AND DATE.
     WE DON'T WANT TO COUNT THOSE AS TWO DAYS FISHED, SO NEED TO SUM THOSE RECORDS.;

PROC SORT DATA=RETURNED; BY PERMIT FISHERY HARVDATE; 
PROC SUMMARY DATA=RETURNED; BY PERMIT FISHERY HARVDATE;
     VAR RED KING COHO PINK CHUM TOTAL;
     ID STATE CITY FAMILYSI NOTFISH OFFICE MAILING BLANKRPT STATUS COMPLIANT RESPONDED;
     OUTPUT OUT=RETURNED SUM=;
RUN;
* MAKE THE RETURNED1 FILE INTO A PERMANENT DATASET.     IT
     CAN BE USED TO GET SUMMARIES OF HARVEST-TYPE DATA. IT DOES NOT 
     HAVE NORESPONDENTS, VOIDS, OR DUPLICATE RECORDS.     IT DOES HAVE
     DID NOT FISH AND BLANK REPORT RECORDS.     PERMITS THAT FISHED MORE
     THAN ONE DAY HAVE MORE THAN ONE RECORD.     SEE THE TOTALHARV
     STEP BELOW TO GET ONE LINE PER PERMIT ACROSS ALL FISHERIES.;

PROC SORT DATA=RETURNED; BY PERMIT FISHERY; RUN;
/*DATA SASDATA.HARVEST01; SET RETURNED (DROP = _TYPE_ _FREQ_ RESPONDED BLANKRPT);*/
RUN;



DATA RETURNED; SET SASDATA.HARVEST01; 
PROC SORT; BY PERMIT;

PROC PRINT DATA = RETURNED (OBS = 125);
RUN;

PROC SUMMARY DATA=RETURNED NWAY; BY PERMIT;
     VAR RED KING COHO PINK CHUM TOTAL;
     ID STATE CITY FAMILYSI NOTFISH STATUS COMPLIANT MAILING; 
     OUTPUT OUT=TOTALHARV N(HARVDATE)=DAYS SUM=;
RUN;

PROC FREQ DATA=TOTALHARV;
     WHERE DAYS GT 0;
     TABLES MAILING / OUT=NUMBPERM;
     TITLE 'NUMBER OF RESPONDING PERMITS THAT FISHED BY MAILING';
RUN;
* DELETE THE NONRESPONDENTS FROM THE PERMIT FILE SO THEY DON'T GET
     AVERAGED IN AS ZEROS WHEN THESE ARE MERGED WITH THE HARVEST FILE!;

 
DATA EMPTY; SET RETURNED (DROP = RED KING COHO PINK CHUM TOTAL); BY PERMIT;
     IF FIRST.PERMIT;
     DO FISHERY = 1 TO 6;
        OUTPUT;
     END;

PROC SORT DATA=RETURNED; BY PERMIT FISHERY; RUN;
PROC SORT DATA=EMPTY; BY PERMIT FISHERY; RUN;

DATA RETURNED; MERGE EMPTY(IN=E) RETURNED(IN=R); BY PERMIT FISHERY;
RUN;
PROC PRINT DATA = RETURNED;
     WHERE PERMIT LT 25;
     TITLE 'PRINT #22 RETURNED AFTER MERGED WITH EMPTY AND RETURNED FOR PERMITS LT 25';
RUN; 

* DO THIS SUMMARY & PRINT JUST TO CHECK THE SUM OF HARVEST FOR RETURNED PERMITS TO SEE IF
     I'M ON TRACK;
PROC SORT DATA = RETURNED; BY FISHERY;
PROC MEANS SUM NOPRINT DATA = RETURNED; BY FISHERY;
     VAR RED KING COHO PINK CHUM TOTAL;
	 OUTPUT OUT = CHECK SUM = RED KING COHO PINK CHUM TOTAL;
DATA CHECK; SET CHECK (DROP = _TYPE_ _FREQ_);
PROC PRINT;
     TITLE 'PRINT # 22B REPORTED HARVEST BY FISHERY - NOT EXPANDED OR CORRECTED';


PROC MEANS SUM NOPRINT DATA = RETURNED; 
     VAR RED KING COHO PINK CHUM TOTAL;
	 OUTPUT OUT = CHECK SUM = RED KING COHO PINK CHUM TOTAL;
DATA CHECK; SET CHECK (DROP = _TYPE_ _FREQ_);
PROC PRINT;
     TITLE 'PRINT # 22B REPORTED HARVEST BY FISHERY - NOT EXPANDED OR CORRECTED';
RUN;

PROC SUMMARY DATA=RETURNED;
     WHERE FISHERY = 1;
     VAR RED;
     OUTPUT OUT=TEST1 SUM= SUMREDS;
     FORMAT _NUMERIC_ COMMA9.;
RUN;

DATA TEST1; SET TEST1 (DROP = _TYPE_ _FREQ_);
PROC PRINT DATA= TEST1;
     TITLE 'PRINT # 23 TEST THE KENAI RIVER RED SUM AFTER CREATING RETURN2';
RUN; 



* NOW GET FILE FISHERYHARVEST WITH ONE LINE PER PERMIT IN EACH FISHERY (SUM ACROSS DATES)
     REMEMBER SOME PERMITS FISHED IN MORE THAN ONE FISHERY, SO STILL HAVE MORE THAN ONE
     LINE PER PERMIT;
PROC SORT DATA = RETURNED; BY PERMIT;
PROC SUMMARY DATA=RETURNED NWAY; BY PERMIT;
     CLASS FISHERY;
     VAR RED KING COHO PINK CHUM TOTAL;
     ID CITY FAMILYSI NOTFISH STATUS MAILING COMPLIANT; 
     OUTPUT OUT=FISHERYHARVEST N=DAYS SUM=;
RUN;

DATA FISHERYHARVEST; SET FISHERYHARVEST (DROP = _TYPE_ _FREQ_);
PROC PRINT DATA=FISHERYHARVEST;
     WHERE PERMIT EQ 368 OR PERMIT EQ 724;
     TITLE 'PRINT #24 FISHERYHARVEST AFTER SUMMARY FOR PERMITS LT 368 AND 724';
RUN; 

* CHECK THE SUM AGAIN TO SEE IF I'M STILL ON TRACK; 
PROC SUMMARY DATA=FISHERYHARVEST;
     WHERE FISHERY = 1;
     VAR RED;
     FORMAT _NUMERIC_ COMMA9.;
     OUTPUT OUT=TEST2 SUM=TOTRED;
RUN;

DATA TEST2; SET TEST2 (DROP = _TYPE_ _FREQ_);
PROC PRINT DATA=TEST2;
     TITLE 'PRINT #25 TEST2 TEST KENAI RIVER RED HARVEST SUMMARY';
RUN; 

PROC FREQ DATA=FISHERYHARVEST;
     WHERE DAYS GT 0;
     TABLES FISHERY*MAILING / OUT = NUMBPERM;
     TITLE 'NUMBER OF RESPONDING PERMITS THAT FISHED IN EACH FISHERY BY MAILING';
RUN;

* TRANSPOSE SO SPECIES BECOME ROWS AND FISHERIES ARE COLUMNS;
PROC SORT DATA = FISHERYHARVEST; BY PERMIT CITY FAMILYSI NOTFISH STATUS MAILING COMPLIANT;
PROC TRANSPOSE DATA=FISHERYHARVEST OUT=FISHERYWIDE; BY PERMIT CITY FAMILYSI NOTFISH STATUS MAILING COMPLIANT;
     VAR DAYS RED KING COHO PINK CHUM TOTAL;
     ID FISHERY;
RUN;
PROC PRINT DATA=FISHERYWIDE;
     WHERE PERMIT EQ 368 OR PERMIT EQ 724;
     TITLE 'PRINT #26 PERIMT 368 AND 724 IN FISHERYWIDE AFTER TRANSPOSE';
RUN; 
* CHECK THE SUM AGAIN TO SEE IF I'M STILL ON TRACK;
PROC SUMMARY DATA=FISHERYWIDE;
     WHERE _NAME_ ='red';
     VAR _1;     
     FORMAT _NUMERIC_ COMMA9.;
     OUTPUT OUT=TEST3 SUM = TOTRED;
RUN;
DATA TEST3; SET TEST3 (DROP = _TYPE_ _FREQ_); 
PROC PRINT DATA=TEST3;
     TITLE 'PRINT #27 TEST3 SUMMARY OF KENAI RED HARVEST FROM FISHERYWIDE AFTER TRANSPOSE';
RUN; 

DATA FISHERYWIDE;
     SET FISHERYWIDE;
     RENAME _NAME_=VARIABLE;
     LABEL _NAME_='VARIABLE';
     _7 = SUM(OF _1-_5);
RUN;
PROC SORT DATA=FISHERYWIDE;
     BY PERMIT VARIABLE;
RUN;
* SET MISSING HARVESTS TO ZERO;
DATA FISHERYWIDE0;     SET FISHERYWIDE;
     ARRAY CATCH(7) _1-_7;
     DO I=1 TO 7;
          IF CATCH(I) EQ . THEN CATCH(I) = 0;
          END;
     DROP I;
RUN;
PROC PRINT DATA=FISHERYWIDE0;
     WHERE PERMIT EQ 368 OR PERMIT EQ 724;
     TITLE 'PRINT #28 PERMIT 368 AND 724 IN FISHERYWIDE0';
RUN;
PROC SORT DATA=FISHERYWIDE0; BY VARIABLE _7;
* COUNT THE NUMBER OF RECORDS THAT FISHED WITH NO HARVEST;
PROC FREQ DATA=FISHERYWIDE0; 
     WHERE VARIABLE EQ 'TOTAL' AND (NOTFISH NE 1) AND (_7 = . OR _7 = 0);
     TABLES _7 /MISSING OUT=NOHARVEST;
     TITLE 'NUMBER OF RESPONDING PERMITS THAT FISHED, BUT DID NOT CATCH ANYTHING FROM FILE FISHERYWIDE0';
RUN;
* COUNT THE NUMBER OF PERMITS THAT DID NOT FISH.     THERE ARE 7 RECORDS FOR 
     EACH PERMIT IN FISHERYWIDE0, BUT THE NOTFISH FIELD IS IDENTICAL FOR ALL 7
     RECORDS, SO JUST CHOOSE ONE OF THE VARIABLE LINES TO COUNT FOR EACH PERMIT;
PROC SORT DATA=FISHERYWIDE0; BY VARIABLE NOTFISH;
PROC FREQ DATA=FISHERYWIDE0; 
     WHERE VARIABLE EQ 'DAYS';
     TABLES NOTFISH*MAILING/MISSING OUT=NOFISHING;
     TITLE 'NUMBER OF RESPONDING PERMITS THAT DID NOT FISH (NOTFISH=1)FROM FISHERYWIDE0';
RUN;
* COUNT THE NUMBER OF PERMITS THAT WERE RETURNED BLANK.     WE ASSUME THESE 
     DID NOT FISH, SO THEY ARE INCLUDED IN THE COUNT OF DID NOT FISH RECORDS
     THAT WE JUST DID, ABOVE.; 

* GET THE TOTAL REPORTED HARVEST FROM EACH FISHERY.
     THIS ISN'T USED IN THE FOLLOWING CALCULATIONS, JUST A HANDY SUMMARY.
     DO IT FIRST FOR ALL PERMITS, THEN FOR VOLUNTARY, MAIL1, MAIL2
     BN_V = THE NUMBER OF VOLUNTARY PERMITS;
PROC SUMMARY DATA=FISHERYWIDE0 NWAY;
     CLASS VARIABLE;
     VAR _1-_7;
     OUTPUT OUT=BH_ N=BN_ SUM=;
RUN;
DATA BH_; SET BH_ (DROP = _TYPE_ _FREQ_);
PROC PRINT DATA=BH_;
     TITLE 'PRINT #29 BH_ SUMMARY OF REPORTED HARVEST, KENAI R. = _1';
RUN;
PROC SUMMARY DATA=FISHERYWIDE0 NWAY;
     WHERE MAILING EQ 0;
     CLASS VARIABLE;
     VAR _1-_7;
     OUTPUT OUT=BH_V N=BN_V SUM= MEAN(_1)=MEAN1 MEAN(_2)=MEAN2 MEAN(_3)=MEAN3
                                                                           MEAN(_4)=MEAN4 MEAN(_5)=MEAN5 MEAN(_6)=MEAN6 MEAN(_7)=MEAN7;
RUN;
DATA BH_V; SET BH_V (DROP = _TYPE_ _FREQ_);
PROC PRINT DATA=BH_V;
     TITLE 'PRINT #29 BH_V SUMMARY OF REPORTED VOLUNTARY HARVEST, KENAI R. = _1';
RUN;
* GET THE TOTAL REPORTED MAILING 1 HARVEST FROM EACH FISHERY.
     THIS ISN'T USED IN THE FOLLOWING CALCULATIONS, JUST A HANDY SUMMARY.
     BN_1 = THE NUMBER OF MAILING 1 PERMITS;
PROC SUMMARY DATA=FISHERYWIDE0 NWAY;
     WHERE MAILING = 1;
     CLASS VARIABLE;
     VAR _1-_7;
     OUTPUT OUT=BH_1 N=BN_1 SUM= MEAN(_1)=MEAN1 MEAN(_2)=MEAN2 MEAN(_3)=MEAN3
                                                                           MEAN(_4)=MEAN4 MEAN(_5)=MEAN5 MEAN(_6)=MEAN6 MEAN(_7)=MEAN7;
RUN;
DATA BH_1; SET BH_1 (DROP = _TYPE_ _FREQ_);
PROC PRINT DATA=BH_1;
     TITLE 'PRINT #30 BH_1 SUMMARY OF REPORTED MAILING 1 HARVEST, KENAI R. = _1';
RUN;
* GET THE TOTAL REPORTED MAILING 2 HARVEST FROM EACH FISHERY.
     THIS ISN'T USED IN THE FOLLOWING CALCULATIONS, JUST A HANDY SUMMARY.
     BN_2 = THE NUMBER OF MAILING 2 PERMITS;
PROC SUMMARY DATA=FISHERYWIDE0 NWAY;
     WHERE MAILING =2;
     CLASS VARIABLE;
     VAR _1-_7;
     OUTPUT OUT=BH_2 N=BN_2 SUM= MEAN(_1)=MEAN1 MEAN(_2)=MEAN2 MEAN(_3)=MEAN3
                                                                           MEAN(_4)=MEAN4 MEAN(_5)=MEAN5 MEAN(_6)=MEAN6 MEAN(_7)=MEAN7;
RUN;
DATA BH_2; SET BH_2 (DROP = _TYPE_ _FREQ_);
PROC PRINT DATA=BH_2;
     TITLE 'PRINT #31 BH_2 SUMMARY OF REPORTED MAILING 2 HARVEST, KENAI R. = _1';
RUN;

* GET THE TOTAL REPORTED COMPLIANT HARVEST FROM EACH FISHERY.
     THIS IS USED IN THE FOLLOWING CALCULATIONS!
     BN_C = THE NUMBER OF COMPLIANT PERMITS;
PROC SUMMARY DATA=FISHERYWIDE0 NWAY;
     WHERE COMPLIANT EQ 'Y';
     CLASS VARIABLE;
     VAR _1-_7;
     OUTPUT OUT=BH_C N=BN_C SUM= MEAN(_1)=MEAN1 MEAN(_2)=MEAN2 MEAN(_3)=MEAN3
                                                                           MEAN(_4)=MEAN4 MEAN(_5)=MEAN5 MEAN(_6)=MEAN6 MEAN(_7)=MEAN7;
RUN;
DATA BH_C; SET BH_C (DROP = _TYPE_ _FREQ_);
PROC PRINT DATA=BH_C;
     TITLE 'PRINT #32 BH_C SUMMARY OF COMPLIANT HARVEST, KENAI R. = _1';
RUN;

DATA BN_C; SET BH_C; WHERE VARIABLE='DAYS'; RUN;

* NOW CALCULATE MEAN NON-COMPLIANT HARVEST (LHB_D), THE NUMBER OF
     NON-COMPLIANT PERMITS (LN_D), AND THE VARIANCE OF THE MEAN (BS1-BS7)
     IT DID SAY VAR=BS1-BS6 I JUST CHANGED IT TO BS7;
PROC SUMMARY DATA=FISHERYWIDE0 NWAY;
     WHERE COMPLIANT EQ 'N';
     CLASS VARIABLE;
     VAR _1-_7;
     OUTPUT OUT=LHB_D N=LN_D /*SUM= */ MEAN= VAR=BS1-BS7;
RUN;
DATA LHB_D; SET LHB_D (DROP = _FREQ_ );
PROC PRINT DATA=LHB_D;
     TITLE 'PRINT #33 LHB_D MEAN NONCOMPLIANT HARVEST AND EFFORT, KENAI R. = _1';
RUN;

* USE FILE TOTISS FOR TOTAL NUMBER OF PERMITS ISSUED
     CALCULATE NUMBER OF NON-COMPLIANT PERMITS (BNH_D).     ITS VARIANCE IS THE 
     VARIANCE OF THE ESTIMATE OF THE NUMBER OF PERMITS ISSUED.;
DATA BNH_D; MERGE TOTISS(KEEP=NHAT VARNHAT) BN_C(KEEP=BN_C);
     BNH_D = NHAT - BN_C;
     _TYPE_ = 1;
     RENAME VARNHAT = VHBNH_D;
RUN;
PROC PRINT DATA=BNH_D;
     TITLE 'PRINT #34 FILE BNH_D, THE NUMBER OF COMPLIANT (BN_C) & NON-COMPLIANT PERMITS (BNH_D)';
RUN;

* CALCULATE NON-COMPLIANT HARVEST, EFFORT, AND THEIR VARIANCES FOR EACH FISHERY;
DATA BHH_D; MERGE LHB_D BNH_D; BY _TYPE_;
     ARRAY LHB_D (7) _1-_7;
     ARRAY BHH_D (7) BHH1-BHH7;
     ARRAY BS_D (7) BS1-BS7;
     ARRAY VHB_D (7) VHB1-VHB7;
     ARRAY VHH (7) VHH1-VHH7;
     ARRAY SE (7) SE1-SE7;
     DO I = 1 TO 7;
          BHH_D(I) = BNH_D*LHB_D(I);
          VHB_D(I) = (1-LN_D/BNH_D)*BS_D(I)/LN_D;
          VHH(I) = BNH_D**2 * VHB_D(I)     +     LHB_D(I)**2 * VHBNH_D     -     VHB_D(I) * VHBNH_D;
          SE(I) = SQRT(VHH(I));
          END;
RUN;
PROC PRINT DATA=BHH_D;
     TITLE 'PRINT #35 NON-COMPLIANT HARVEST & EFFORT, FILE BHH_D AFTER MERGING WITH LHB_D AND BNH_D';
RUN;

* CONCATENATE THE COMPLIANT (BH_C) FILE AND THE NON-COMPLIANT (BHH_D) FILE.     RENAME
     THE VARIABLES IN THE COMPLIANT FILE SO THEY MATCH THE NAMES OF THE EQUIVALENT
     NON-COMPLIANT VARIABLES;
DATA BH_X;
     SET BH_C(IN=C RENAME=(_1=BHH1 _2=BHH2 _3=BHH3 _4=BHH4 _5=BHH5 _6=BHH6 _7=BHH7))
               BHH_D(IN=D);
     IF C THEN COMPLIANT=1;
     ELSE IF D THEN COMPLIANT=0;
     FORMAT _NUMERIC_ 9.0;
RUN;

* SUM THE COMPLIANT AND NONCOMPLIANT HARVESTS AND EFFORTS TO GET TOTAL HARVEST YAHOO!;
PROC SUMMARY DATA=BH_X NWAY;
     CLASS VARIABLE;
     VAR BHH1-BHH7 SE1-SE7;
     OUTPUT OUT=BHH SUM=;
RUN;
PROC PRINT NOOBS LABEL;
     ID VARIABLE;
     VAR BHH1 SE1 BHH2 SE2 BHH3 SE3 BHH4 SE4 BHH5 SE5 BHH6 SE6 BHH7 SE7;
     FORMAT _NUMERIC_ COMMA9.;
     TITLE 'PRINT #36 ESTIMATED HARVEST AND EFFORT BY FISHERY';
     LABEL BHH1='KENAI RIVER DIP NET'
                    BHH2='KASILOF RIVER DIP NET'
                    BHH3='KASILOF RIVER GILL NET'
                    BHH4='FISH CREEK DIP NET'
                    BHH5='UNKNOWN'
		BHH6='DID NOT FISH'
                    BHH7='ALL'
                    SE1='SE' SE2='SE' SE3='SE' SE4='SE' SE5='SE' SE6='SE' SE7='SE';
 RUN;


* NOW DO A BUNCH OF SUMMARIES OF THE RESPONSES;
* FIRST GET SUMMARIES OF HARVEST BY DATE FOR EACH FISHERY;

PROC SORT DATA=RETURNED; BY HARVDATE;
PROC SUMMARY DATA=RETURNED; BY HARVDATE;
     WHERE FISHERY=1;
     VAR RED KING COHO PINK CHUM TOTAL;
     OUTPUT OUT=DATESKENAI SUM=;
     FORMAT HARVDATE DATE7. RED KING COHO PINK CHUM TOTAL 7.0;
PROC PRINT DATA=DATESKENAI;
     TITLE 'REPORTED HARVEST BY DATE IN KENAI RIVER DIPNET';
RUN;

PROC SUMMARY DATA=RETURNED; BY HARVDATE;
     WHERE FISHERY=2;
     VAR RED KING COHO PINK CHUM TOTAL;
     OUTPUT OUT=DATESKASDIP SUM=;
     FORMAT HARVDATE DATE7. RED KING COHO PINK CHUM TOTAL 7.0;
PROC PRINT DATA=DATESKASDIP;
     TITLE 'REPORTED HARVEST BY DATE IN KASILOF RIVER DIPNET';
RUN;

PROC SUMMARY DATA=RETURNED; BY HARVDATE;
     WHERE FISHERY=3 AND NOTFISH = 0;
     VAR RED KING COHO PINK CHUM TOTAL;
     OUTPUT OUT=DATESKASGIL SUM=;
     FORMAT HARVDATE DATE7. RED KING COHO PINK CHUM TOTAL 7.0;
PROC PRINT DATA=DATESKASGIL;
     TITLE 'REPORTED HARVEST BY DATE IN KASILOF RIVER GILLNET';
RUN;

PROC SUMMARY DATA=RETURNED; BY HARVDATE;
     WHERE FISHERY=5;
     VAR RED KING COHO PINK CHUM TOTAL;
     OUTPUT OUT=DATESUNK SUM=;
     FORMAT HARVDATE DATE7. RED KING COHO PINK CHUM TOTAL 7.0;

PROC PRINT DATA=DATESUNK;
     TITLE 'REPORTED HARVEST BY DATE IN UNKNOWN FISHERY';
RUN;

* NOW GET SUMMARIES BY TOWN OF RESIDENCY OF THE PERMIT HOLDER;

PROC SORT DATA=RETURNED; BY CITY; 
PROC SUMMARY DATA=RETURNED; BY CITY; 
     OUTPUT OUT=CITYPERMS;
RUN;

PROC PRINT DATA=CITYPERMS;
     TITLE 'PERMITS ISSUED BY CITY OF PERMIT HOLDER';
RUN;

PROC SORT DATA=RETURNED; BY CITY; 
PROC SUMMARY DATA=RETURNED; BY CITY; 
     WHERE NOTFISH=0;
     VAR RED KING COHO PINK CHUM TOTAL;
     OUTPUT OUT=CITYHARV SUM=;
     FORMAT RED KING COHO PINK CHUM TOTAL 7.0;
PROC PRINT DATA=CITYHARV;
     TITLE 'HARVEST BY CITY OF PERMIT HOLDER';
RUN;

PROC SORT DATA=RETURNED; BY PERMIT FISHERY; 
PROC SUMMARY DATA=RETURNED; BY PERMIT FISHERY;
     WHERE NOTFISH = 0;
     VAR RED KING COHO PINK CHUM TOTAL;
     ID NOTFISH CITY FAMILYSI;
     OUTPUT OUT=RETURNSUM N=DAYS SUM=;
PROC PRINT DATA=RETURNSUM;
     TITLE 'HARVEST BY FISHERY AND CITY OF PERMIT HOLDER';
RUN;

PROC SORT DATA=RETURNSUM; BY CITY FISHERY; 
PROC SUMMARY DATA=RETURNSUM; BY CITY;
     WHERE NOTFISH=0;
     VAR RED KING COHO PINK CHUM TOTAL;
     OUTPUT OUT=CITYPERMS SUM=;
     FORMAT RED KING COHO PINK CHUM TOTAL 7.0;
PROC PRINT DATA=CITYPERMS;
     TITLE 'PERMITS AND HARVEST BY CITY OF PERMIT HOLDER';
RUN;

* NOW GET DISTRIBUTION OF TOTAL HARVEST BY PERMIT HOLDERS IN 5 FISH INTERVALS;
* FIRST GET A FILE WITH ONE LINE PER PERMIT (SUM ACROSS FISHERIES);
PROC SORT DATA=RETURNSUM; BY PERMIT; 
PROC SUMMARY DATA=RETURNSUM; BY PERMIT; 
     VAR RED KING COHO PINK CHUM TOTAL;
     ID NOTFISH CITY FAMILYSI;
     OUTPUT OUT=RETURNSUM2 SUM=;
     FORMAT RED KING COHO PINK CHUM TOTAL 7.0;
PROC PRINT DATA=RETURNSUM2;
     TITLE 'DATA RETURNSUM2';
RUN;
     
* NOW PUT THE PERMITS INTO 5 FISH INTERVAL HARVEST CATEGORIES;
DATA RETURNSUM2; SET RETURNSUM2 (DROP = _TYPE_ _FREQ_);
     *GROUP = 'LONGLONGTEXT';
     FORMAT GROUP $CHAR8.;
     IF TOTAL = 0 THEN GROUP = '0     ';
     IF TOTAL GT 0 AND TOTAL LE 5 THEN GROUP ='01-5';
     IF TOTAL GE 6 AND TOTAL LE 10 THEN GROUP = '06-10';
     IF TOTAL GE 11 AND TOTAL LE 15 THEN GROUP = '11-15';
     IF TOTAL GE 16 AND TOTAL LE 20 THEN GROUP = '16-20';
     IF TOTAL GE 21 AND TOTAL LE 25 THEN GROUP = '21-25';
     IF TOTAL GE 26 AND TOTAL LE 30 THEN GROUP = '26-30';
     IF TOTAL GE 31 AND TOTAL LE 35 THEN GROUP = '31-35';
     IF TOTAL GE 36 AND TOTAL LE 40 THEN GROUP = '36-40';
     IF TOTAL GE 41 AND TOTAL LE 45 THEN GROUP = '41-45';
     IF TOTAL GE 46 AND TOTAL LE 50 THEN GROUP = '46-50';
     IF TOTAL GE 51 AND TOTAL LE 55 THEN GROUP = '51-55';
     IF TOTAL GE 56 AND TOTAL LE 60 THEN GROUP = '56-60';
     IF TOTAL GE 61 AND TOTAL LE 65 THEN GROUP = '61-65';
     IF TOTAL GE 66 AND TOTAL LE 70 THEN GROUP = '66-70';
     IF TOTAL GE 71 AND TOTAL LE 75 THEN GROUP = '71-75';
     IF TOTAL GE 76 AND TOTAL LE 80 THEN GROUP = '76-80';
     IF TOTAL GE 81 AND TOTAL LE 85 THEN GROUP = '81-85';
     IF TOTAL GE 86 AND TOTAL LE 90 THEN GROUP = '86-90';
     IF TOTAL GE 91 AND TOTAL LE 95 THEN GROUP = '91-95';
     IF TOTAL GE 96 AND TOTAL LE 100 THEN GROUP = '96-100';
     IF TOTAL GE 101 THEN GROUP = 'OVER 100';

RUN;
PROC SORT DATA=RETURNSUM2; BY GROUP; 
PROC SUMMARY DATA=RETURNSUM2; BY GROUP; 
     WHERE NOTFISH = 0;
     VAR TOTAL;
     OUTPUT OUT=HARVDIST N=;
RUN;

PROC PRINT DATA=HARVDIST;
     TITLE 'DISTRIBUTION OF TOTAL HARVEST FOR ALL RETURNED PERMITS THAT FISHED (DOES NOT INCLUDE THOSE THAT DID NOT FISH)';
RUN;

* NOW GET HARVEST PER HOUSEHOLD MEMBER FOR ALL PERMITS THAT FISHED;
 
DATA RETURNSUM2; SET RETURNSUM2;
     WHERE FAMILYSI GT 0;
     HHHARV= ROUND(TOTAL/FAMILYSI,1);
     FORMAT HHGROUP $CHAR8.;
     HHGROUP = 'FILLER';
     IF TOTAL = 0 THEN HHGROUP = '0     ';
     IF TOTAL/FAMILYSI GT 0 AND HHHARV LE 5 THEN HHGROUP = '01-05';
     IF HHHARV GE 6 AND HHHARV LE 10 THEN HHGROUP = '06-10';
     IF HHHARV GE 11 AND HHHARV LE 15 THEN HHGROUP = '11-15';
     IF HHHARV GE 16 AND HHHARV LE 20 THEN HHGROUP = '16-20';
     IF HHHARV GE 21 AND HHHARV LE 25 THEN HHGROUP = '21-25';
     IF HHHARV GE 26 AND HHHARV LE 30 THEN HHGROUP = '26-30';
     IF HHHARV GE 31 AND HHHARV LE 35 THEN HHGROUP = '31-35';
     IF HHHARV GE 36 AND HHHARV LE 40 THEN HHGROUP = '36-40';
     IF HHHARV GE 41 AND HHHARV LE 45 THEN HHGROUP = '41-45';
     IF HHHARV GE 46 AND HHHARV LE 50 THEN HHGROUP = '46-50';
     IF HHHARV GE 51 AND HHHARV LE 55 THEN HHGROUP = '51-55';
     IF HHHARV GE 56 AND HHHARV LE 60 THEN HHGROUP = '56-60';
     IF HHHARV GE 61 AND HHHARV LE 65 THEN HHGROUP = '61-65';
     IF HHHARV GE 66 AND HHHARV LE 70 THEN HHGROUP = '66-70';
     IF HHHARV GE 71 AND HHHARV LE 75 THEN HHGROUP = '71-75';
     IF HHHARV GE 76 AND HHHARV LE 80 THEN HHGROUP = '76-80';
     IF HHHARV GE 81 AND HHHARV LE 85 THEN HHGROUP = '81-85';
     IF HHHARV GE 86 AND HHHARV LE 90 THEN HHGROUP = '86-90';
     IF HHHARV GE 91 AND HHHARV LE 95 THEN HHGROUP = '91-95';
     IF HHHARV GE 96 AND HHHARV LE 100 THEN HHGROUP = '96-100';
     IF HHHARV GE 101 THEN HHGROUP = 'OVER 100';
RUN;
PROC SORT DATA=RETURNSUM2; BY HHGROUP; 
PROC SUMMARY DATA=RETURNSUM2; BY HHGROUP;
     WHERE NOTFISH = 0;
     VAR TOTAL;
     OUTPUT OUT=HHHARVDIST N=;
RUN;
DATA HHHARVDIST; SET HHHARVDIST (DROP = _TYPE_ _FREQ_);
PROC PRINT DATA=HHHARVDIST;
     TITLE 'DISTRIBUTION OF HARVEST PER HOUSEHOLD MEMBER FOR ALL PERMITS THAT FISHED (DOES NOT INCLUDE THOSE THAT DID NOT FISH)';
RUN;



